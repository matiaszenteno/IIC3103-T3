{"version":3,"sources":["index.js"],"names":["Leaflet","Icon","Default","prototype","_getIconUrl","mergeOptions","className","App","props","setCurrentNickname","nickname","setState","current_nickname","setNickname","state","setCurrentMessage","message","current_message","sendMessage","body","name","socket","emit","messages","flights","positions","paths","bind","this","io","connect","path","transports","on","position","prevState","code","map","index","flight","passenger","key","age","zoom","center","attribution","url","Object","keys","type","placeholder","onChange","e","target","value","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1edfe224.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport io from \"socket.io-client\";\n\nimport './index.css';\n\nimport Leaflet from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\n\ndelete Leaflet.Icon.Default.prototype._getIconUrl;\n\nLeaflet.Icon.Default.mergeOptions({\n  className: 'icon',\n});\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      nickname: '',\n      current_nickname: '',\n      current_message: '',\n      messages: [],\n      flights: [],\n      positions: {},\n      paths: {},\n    }\n    this.setCurrentNickname = this.setCurrentNickname.bind(this);\n    this.setNickname = this.setNickname.bind(this);\n    this.setCurrentMessage = this.setCurrentMessage.bind(this);\n  }\n\n  componentDidMount () {\n    this.socket = io.connect('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n      path: '/flights/',\n      transports: ['websocket'],\n    });\n\n    this.socket.on('CHAT', message => {\n      this.setState({ messages: [...this.state.messages, message]})\n    });\n\n    this.socket.on('FLIGHTS', flights => {\n      this.setState({ flights: flights})\n    });\n\n    this.socket.on('POSITION', position => {\n      this.setState(prevState => ({\n        positions: {\n            ...prevState.positions,\n            [position.code]: position.position,\n        },\n      }));\n      this.socket.emit('FLIGHTS', {})\n    });\n  }\n\n  setCurrentNickname = nickname => {\n    this.setState({ current_nickname: nickname})\n  }\n\n  setNickname = () => {\n    this.setState({ nickname: this.state.current_nickname})\n  }\n\n  setCurrentMessage = message => {\n    this.setState({ current_message: message})\n  }\n\n  sendMessage = () => {\n    if (this.state.nickname) {\n      const body = this.state.current_message\n      const message = {\n        name: this.state.nickname,\n        message: body\n      }\n      this.socket.emit('CHAT', message)\n    }\n  }\n\n  render() {\n    const messages = this.state.messages.map((message, index) => {\n      return <li key={index}>\n        <b>{message.name}: {message.message}</b>\n      </li>\n    });\n\n    const flights = this.state.flights.map((flight, index) => {\n      return <li key={index}>\n        <div className=\"flight-info\">\n          <p className=\"flight-info-line\"><b>VUELO {flight['code']}</b></p>\n          <p className=\"flight-info-line\"><b>Aerolínea:</b> {flight['airline']}</p>\n          <p className=\"flight-info-line\"><b>Origen:</b> {flight['origin']}</p>\n          <p className=\"flight-info-line\"><b>Destino:</b> {flight['destination']}</p>\n          <p className=\"flight-info-line\"><b>Avión:</b> {flight['plane']}</p>\n          <p className=\"flight-info-line\"><b>Asientos:</b> {flight['seats']}</p>\n          <p className=\"flight-info-line\"><b>Pasajeros:</b></p>\n          {flight['passengers'].map((passenger, key) => (\n            <p key={key}>\n              {passenger.name}, {passenger.age} años.\n            </p>\n          ))}\n        </div>     \n      </li>\n    });\n\n    return(\n      <div>\n        <div className=\"title-container\">\n          <h1>Información Vuelos</h1>\n        </div>\n        <div className=\"general-container\">\n          <div className=\"base-container\">\n            <div className=\"map-container\">\n              <div>\n                <MapContainer className=\"map\" zoom={5} center={[-30, -70]} >\n                  <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  />\n                  {Object.keys(this.state.positions).map((key, index) => (\n                    <Marker key={key} position={this.state.positions[key]}>\n                      <Popup>{key}</Popup>\n                    </Marker>\n                  ))}\n                </MapContainer>\n              </div>\n            </div>\n\n            <div className=\"chat-container\">\n              <h2>Centro de Control</h2>\n\n              <div className=\"nickname-container\">\n                <input\n                  type=\"text\"\n                  placeholder='Ingresa tu nombre'\n                  onChange={(e) => this.setCurrentNickname(e.target.value)}>\n                </input>\n                <button onClick={() => this.setNickname()}>\n                  Ingresar\n                </button>\n              </div>\n\n              <div className=\"messages-container\">\n                <div className=\"messages-input-container\">\n                  <input\n                    type=\"text\"\n                    placeholder='Ingresa tu mensaje'\n                    onChange={(e) => this.setCurrentMessage(e.target.value)}>\n                  </input>\n                  <button onClick={() => this.sendMessage()}>\n                    Enviar\n                  </button>\n                </div>\n                {messages}\n              </div>\n            </div>\n          </div>\n          <div className=\"info-container\">\n            <div className=\"flights-info\">\n              {flights}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}